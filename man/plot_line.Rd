% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_line.R
\name{plot_line}
\alias{plot_line}
\title{plot_line creates a line plot}
\usage{
plot_line(
  data,
  method = c("raw", "comparison", "returns"),
  frequency = c("daily", "weekly", "monthly", "yearly"),
  display = c("plot", "table")
)
}
\arguments{
\item{data}{A \code{data.frame} with al least two variables.
\enumerate{
\item first variable represents dates (date format) min: daily basis (intraday not supported right now)
\item{from second variable it supports numeric values (prices)}
}}

\item{method}{A string. \code{"raw"} if you want to plot data as it comes. \code{"comparison"} transforms data on to a common base (factor 100). \code{"returns"} transform your data using ((today/yesterday) -1) formula.}

\item{frequency}{A string. Representing how do you want to see values.}

\item{display}{A string. In case you want to return data instead of a plot object.}
}
\value{
according to your \code{"display"} value:
\enumerate{
\item a plot(default): using \code{ggplot2} as base. According to your parameters will show returns on the \code{frequency} you selected.
\item{a table: returns a dataframe with parameters you selected. Useful if you want to run a sanity check}
}
}
\description{
plot_line creates a line plot
}
\examples{
##Dummy example using base data()
airmiles_df <- data.frame(
date = as.Date(paste0(time(airmiles), "-01-01")),
airmiles = as.numeric(airmiles))
plot_line(airmiles_df, method = "raw", frequency = "yearly", display = "plot")
#This will generate expected plot.

#If you only need store data:
dummy = plot_line(airmiles_df, method = "raw", frequency = "yearly", display = "table")
#This will generate expected plot.

#For more advanced examples please visit github site.
}
