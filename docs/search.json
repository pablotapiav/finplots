[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pablo Tapia Varela. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tapia Varela P (2023). finplots: Financial Plots one line code. R package version 0.1.0.","code":"@Manual{,   title = {finplots: Financial Plots with one line of code},   author = {Pablo {Tapia Varela}},   year = {2023},   note = {R package version 0.1.0}, }"},{"path":"/reference/finplots-package.html","id":null,"dir":"Reference","previous_headings":"","what":"finplots: Financial Plots with one line of code — finplots-package","title":"finplots: Financial Plots with one line of code — finplots-package","text":"Create useful visualizations financial purposes. need dataset date prices, take care rest!","code":""},{"path":"/reference/finplots-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"finplots: Financial Plots with one line of code — finplots-package","text":"Maintainer: Pablo Tapia Varela pablotapiav@gmail.com","code":""},{"path":"/reference/plot_boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_boxplot create a boxplot — plot_boxplot","title":"plot_boxplot create a boxplot — plot_boxplot","text":"plot_boxplot create boxplot","code":""},{"path":"/reference/plot_boxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_boxplot create a boxplot — plot_boxplot","text":"","code":"plot_boxplot(   data,   method = c(\"raw\", \"comparison\"),   frequency = c(\"daily\", \"weekly\", \"monthly\", \"yearly\") )"},{"path":"/reference/plot_boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_boxplot create a boxplot — plot_boxplot","text":"data data.frame al least two variables. first variable represents dates (date format) min: daily basis (intraday supported right now) second variable supports numeric values (prices) method string. \"raw\" want plot data comes. \"comparison\" transforms data common base (factor 100). frequency string. Representing want see return values.","code":""},{"path":"/reference/plot_boxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_boxplot create a boxplot — plot_boxplot","text":"boxplot using ggplot2 base. According parameters show returns frequency selected.","code":""},{"path":"/reference/plot_boxplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot_boxplot create a boxplot — plot_boxplot","text":"","code":"##Dummy example using base data() airmiles_df <- data.frame( date = as.Date(paste0(time(airmiles), \"-01-01\")), airmiles = as.numeric(airmiles))  #This will generate expected plot: plot_boxplot(airmiles_df, method = \"raw\", frequency = \"yearly\") #> [1] \"Hint: Each value is a return if you want a common base use method = comparison.\"   #For more advanced examples please visit github site."},{"path":"/reference/plot_distr.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_distr create a distribution plot — plot_distr","title":"plot_distr create a distribution plot — plot_distr","text":"plot_distr create distribution plot","code":""},{"path":"/reference/plot_distr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_distr create a distribution plot — plot_distr","text":"","code":"plot_distr(data, frequency = c(\"daily\", \"weekly\", \"monthly\", \"yearly\"))"},{"path":"/reference/plot_distr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_distr create a distribution plot — plot_distr","text":"data data.frame al least two variables. first variable represents dates (date format) min: daily basis (intraday supported right now) second variable supports numeric values (prices) frequency string representing want see return values","code":""},{"path":"/reference/plot_distr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_distr create a distribution plot — plot_distr","text":"distribution plot using ggplot2 base. According parameters show returns frequency selected.","code":""},{"path":"/reference/plot_distr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot_distr create a distribution plot — plot_distr","text":"","code":"##Dummy example using base data() airmiles_df <- data.frame( date = as.Date(paste0(time(airmiles), \"-01-01\")), airmiles = as.numeric(airmiles)) plot_distr(airmiles_df, frequency = \"daily\") #This will generate expected plot.   #For more advanced examples please visit github site."},{"path":"/reference/plot_line.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_line creates a line plot — plot_line","title":"plot_line creates a line plot — plot_line","text":"plot_line creates line plot","code":""},{"path":"/reference/plot_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_line creates a line plot — plot_line","text":"","code":"plot_line(   data,   method = c(\"raw\", \"comparison\", \"returns\"),   frequency = c(\"daily\", \"weekly\", \"monthly\", \"yearly\"),   display = c(\"plot\", \"table\") )"},{"path":"/reference/plot_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_line creates a line plot — plot_line","text":"data data.frame al least two variables. first variable represents dates (date format) min: daily basis (intraday supported right now) second variable supports numeric values (prices) method string. \"raw\" want plot data comes. \"comparison\" transforms data common base (factor 100). \"returns\" transform data using ((today/yesterday) -1) formula. frequency string. Representing want see values. display string. case want return data instead plot object.","code":""},{"path":"/reference/plot_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_line creates a line plot — plot_line","text":"according \"display\" value: plot(default): using ggplot2 base. According parameters show returns frequency selected. table: returns dataframe parameters selected. Useful want run sanity check","code":""},{"path":"/reference/plot_line.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot_line creates a line plot — plot_line","text":"","code":"##Dummy example using base data() airmiles_df <- data.frame( date = as.Date(paste0(time(airmiles), \"-01-01\")), airmiles = as.numeric(airmiles)) plot_line(airmiles_df, method = \"raw\", frequency = \"yearly\", display = \"plot\") #> [1] \"Building your plot.\"  #This will generate expected plot.  #If you only need store data: dummy = plot_line(airmiles_df, method = \"raw\", frequency = \"yearly\", display = \"table\") #> [1] \"Building your plot.\" #This will generate expected plot.  #For more advanced examples please visit github site."},{"path":"/reference/tidy_bbg.html","id":null,"dir":"Reference","previous_headings":"","what":"tidy_bbg prepare your data coming from bbg using Rblpapi. — tidy_bbg","title":"tidy_bbg prepare your data coming from bbg using Rblpapi. — tidy_bbg","text":"tidy_bbg prepare data coming bbg using Rblpapi.","code":""},{"path":"/reference/tidy_bbg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tidy_bbg prepare your data coming from bbg using Rblpapi. — tidy_bbg","text":"","code":"tidy_bbg(df_list)"},{"path":"/reference/tidy_bbg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tidy_bbg prepare your data coming from bbg using Rblpapi. — tidy_bbg","text":"df_list list. object comes call bbg. prepare use finplots.","code":""},{"path":"/reference/tidy_bbg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"tidy_bbg prepare your data coming from bbg using Rblpapi. — tidy_bbg","text":"data.frame.","code":""},{"path":[]},{"path":[]},{"path":"/reference/tidy_data.html","id":null,"dir":"Reference","previous_headings":"","what":"tidy_data prepare your data and makes return calcs according to your arguments given. — tidy_data","title":"tidy_data prepare your data and makes return calcs according to your arguments given. — tidy_data","text":"tidy_data prepare data makes return calcs according arguments given.","code":""},{"path":"/reference/tidy_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tidy_data prepare your data and makes return calcs according to your arguments given. — tidy_data","text":"","code":"tidy_data(data, frequency = c(\"daily\", \"weekly\", \"monthly\", \"yearly\"))"},{"path":"/reference/tidy_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tidy_data prepare your data and makes return calcs according to your arguments given. — tidy_data","text":"data data frame: first column must date, second column prices. frequency can pick daily, weekly, monthly yearly.","code":""}]
